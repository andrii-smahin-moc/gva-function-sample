export default {
  'import/no-extraneous-dependencies': 'off',
  'import/no-unresolved': 'off',
  'no-restricted-syntax': 'off',
  'no-await-in-loop': 'off',
  'no-empty-pattern': 'off',
  'playwright/no-nested-step': 'off',
  'no-unused-vars': ['error', { args: 'none' }],
  '@typescript-eslint/no-unused-vars': ['warn'],
  '@typescript-eslint/no-explicit-any': 'off',
  'arrow-body-style': 'error',
  'arrow-parens': ['error', 'always'],
  'brace-style': ['error', '1tbs'],
  'class-methods-use-this': 'off',
  'comma-dangle': ['error', 'always-multiline'],
  'constructor-super': 'error',
  curly: 'error',
  'dot-notation': 'off',
  'eol-last': 'error',
  eqeqeq: ['off', 'smart'],
  'guard-for-in': 'error',
  'id-blacklist': 'off',
  'id-match': 'off',
  'import/extensions': 'off',
  'import/prefer-default-export': 'off',
  'max-len': [
    'error',
    {
      code: 140,
      ignoreComments: true,
      ignoreStrings: true,
    },
  ],
  'no-bitwise': 'off',
  'no-caller': 'error',
  'no-console': [
    'error',
    {
      allow: [
        'info',
        'warn',
        'dir',
        'timeLog',
        'assert',
        'clear',
        'count',
        'countReset',
        'group',
        'groupEnd',
        'table',
        'dirxml',
        'error',
        'groupCollapsed',
        'Console',
        'profile',
        'profileEnd',
        'timeStamp',
        'context',
      ],
    },
  ],
  'no-debugger': 'error',
  'no-empty': 'off',
  'no-empty-function': 'off',
  'no-eval': 'error',
  'no-fallthrough': 'error',
  'no-new-wrappers': 'error',
  'no-throw-literal': 'error',
  'no-trailing-spaces': 'error',
  'no-undef-init': 'error',
  'no-underscore-dangle': 'off',
  'no-unneeded-ternary': 'error',
  'no-unused-expressions': 'error',
  'no-unused-labels': 'error',
  'no-use-before-define': 'error',
  'no-var': 'error',
  'object-shorthand': 'error',
  'operator-linebreak': 'error',
  'prefer-arrow-callback': 'error',
  'prefer-const': 'error',
  'quote-props': ['error', 'as-needed'],
  radix: 'error',
  semi: 'error',
  'space-before-function-paren': 'off',
  'spaced-comment': ['error', 'always', { markers: ['/'] }],
  'valid-typeof': 'error',
};
